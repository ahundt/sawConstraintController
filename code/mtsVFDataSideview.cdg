inline-header {
#include <sawConstraintController/mtsVFDataBase.h>
}

class {

    name mtsVFDataSideview;

    // All VF data objects are subclasses of mtsVFDataBase
    base-class {
      type mtsVFDataBase;
    }

    // This vct3 object represents a point in the central axis of the cochlea that we want the probe to stick close to
    member {    
      name VFPoint;
      type vct3;
      default vct3(0.0,0.0,0.0);
      visibility public;
    }

    // The constructor takes a name, a kinematics object for the probe tip, and a point on the cochlear's central axis
    inline-header {
        mtsVFDataSideview(const std::string & name, const std::string & kinName,
                                  const vct3 & point);
    }   
}

inline-code {
    /*! Constructor
    \param name String name of object
    \param importance Number representing this virtual fixture's relative importance
    */
    mtsVFDataSideview::mtsVFDataSideview(const std::string & name, const std::string & kinName,
                                                         const vct3 & point) : mtsVFDataBase()
    {
        // Store the name, kinematics dependency name, and cochlear center point
        Name = name;
        KinNames.push_back(kinName);
        VFPoint = point;
    }
}
